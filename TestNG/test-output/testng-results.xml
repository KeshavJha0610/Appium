<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="3" total="13" passed="9" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-01-31T21:00:37 IST" name="loan Department" finished-at="2021-01-31T21:00:37 IST" duration-ms="84">
    <groups>
      <group name="Smoke">
        <method signature="Basics2.ploan()[pri:0, instance:test.Basics2@6c779568]" name="ploan" class="test.Basics2"/>
        <method signature="Basics4.MobileloginhomeLoan()[pri:0, instance:test.Basics4@7e9131d5]" name="MobileloginhomeLoan" class="test.Basics4"/>
        <method signature="Basics3.MobilelogincarLoan()[pri:0, instance:test.Basics3@272ed83b]" name="MobilelogincarLoan" class="test.Basics3"/>
      </group> <!-- Smoke -->
    </groups>
    <test started-at="2021-01-31T21:00:37 IST" name="Car Loan" finished-at="2021-01-31T21:00:37 IST" duration-ms="84">
      <class name="test.Basics3">
        <test-method is-config="true" signature="Bfsuite()[pri:0, instance:test.Basics3@272ed83b]" started-at="2021-01-31T21:00:37 IST" name="Bfsuite" finished-at="2021-01-31T21:00:37 IST" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Bfsuite -->
        <test-method is-config="true" signature="beforeclass()[pri:0, instance:test.Basics3@272ed83b]" started-at="2021-01-31T21:00:37 IST" name="beforeclass" finished-at="2021-01-31T21:00:37 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeclass -->
        <test-method is-config="true" signature="beforeevery()[pri:0, instance:test.Basics3@272ed83b]" started-at="2021-01-31T21:00:37 IST" name="beforeevery" finished-at="2021-01-31T21:00:37 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeevery -->
        <test-method signature="MobilelogincarLoan()[pri:0, instance:test.Basics3@272ed83b]" started-at="2021-01-31T21:00:37 IST" name="MobilelogincarLoan" finished-at="2021-01-31T21:00:37 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobilelogincarLoan -->
        <test-method is-config="true" signature="afterevery()[pri:0, instance:test.Basics3@272ed83b]" started-at="2021-01-31T21:00:37 IST" name="afterevery" finished-at="2021-01-31T21:00:37 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterevery -->
        <test-method is-config="true" signature="beforeevery()[pri:0, instance:test.Basics3@272ed83b]" started-at="2021-01-31T21:00:37 IST" name="beforeevery" finished-at="2021-01-31T21:00:37 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeevery -->
        <test-method signature="MobilesignoutcarLoan(java.lang.String, java.lang.String)[pri:0, instance:test.Basics3@272ed83b]" started-at="2021-01-31T21:00:37 IST" name="MobilesignoutcarLoan" data-provider="getData" finished-at="2021-01-31T21:00:37 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firstsetusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[firstpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobilesignoutcarLoan -->
        <test-method is-config="true" signature="afterevery()[pri:0, instance:test.Basics3@272ed83b]" started-at="2021-01-31T21:00:37 IST" name="afterevery" finished-at="2021-01-31T21:00:37 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterevery -->
        <test-method is-config="true" signature="beforeevery()[pri:0, instance:test.Basics3@272ed83b]" started-at="2021-01-31T21:00:37 IST" name="beforeevery" finished-at="2021-01-31T21:00:37 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeevery -->
        <test-method signature="MobilesignoutcarLoan(java.lang.String, java.lang.String)[pri:0, instance:test.Basics3@272ed83b]" started-at="2021-01-31T21:00:37 IST" name="MobilesignoutcarLoan" data-provider="getData" finished-at="2021-01-31T21:00:37 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[secondsetusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secondpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobilesignoutcarLoan -->
        <test-method is-config="true" signature="afterevery()[pri:0, instance:test.Basics3@272ed83b]" started-at="2021-01-31T21:00:37 IST" name="afterevery" finished-at="2021-01-31T21:00:37 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterevery -->
        <test-method signature="MobilesignoutcarLoan(java.lang.String, java.lang.String)[pri:0, instance:test.Basics3@272ed83b]" started-at="2021-01-31T21:00:37 IST" name="MobilesignoutcarLoan" data-provider="getData" finished-at="2021-01-31T21:00:37 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[thirdsetusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[thirdpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobilesignoutcarLoan -->
        <test-method is-config="true" signature="beforeevery()[pri:0, instance:test.Basics3@272ed83b]" started-at="2021-01-31T21:00:37 IST" name="beforeevery" finished-at="2021-01-31T21:00:37 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeevery -->
        <test-method is-config="true" signature="afterevery()[pri:0, instance:test.Basics3@272ed83b]" started-at="2021-01-31T21:00:37 IST" name="afterevery" finished-at="2021-01-31T21:00:37 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterevery -->
        <test-method is-config="true" signature="beforeevery()[pri:0, instance:test.Basics3@272ed83b]" started-at="2021-01-31T21:00:37 IST" name="beforeevery" finished-at="2021-01-31T21:00:37 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeevery -->
        <test-method signature="WeblogincarLoan(java.lang.String, java.lang.String)[pri:0, instance:test.Basics3@272ed83b]" started-at="2021-01-31T21:00:37 IST" name="WeblogincarLoan" finished-at="2021-01-31T21:00:37 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[carloan.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WeblogincarLoan -->
        <test-method is-config="true" signature="afterevery()[pri:0, instance:test.Basics3@272ed83b]" started-at="2021-01-31T21:00:37 IST" name="afterevery" finished-at="2021-01-31T21:00:37 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterevery -->
        <test-method is-config="true" signature="afterclass()[pri:0, instance:test.Basics3@272ed83b]" started-at="2021-01-31T21:00:37 IST" name="afterclass" finished-at="2021-01-31T21:00:37 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterclass -->
      </class> <!-- test.Basics3 -->
      <class name="test.Basics1">
        <test-method is-config="true" signature="afsuite()[pri:0, instance:test.Basics1@2cdd0d4b]" started-at="2021-01-31T21:00:37 IST" name="afsuite" finished-at="2021-01-31T21:00:37 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afsuite -->
      </class> <!-- test.Basics1 -->
    </test> <!-- Car Loan -->
    <test started-at="2021-01-31T21:00:37 IST" name="personal loan" finished-at="2021-01-31T21:00:37 IST" duration-ms="76">
      <class name="test.Basics4">
        <test-method signature="LoginApihomeLoan()[pri:0, instance:test.Basics4@7e9131d5]" started-at="2021-01-31T21:00:37 IST" name="LoginApihomeLoan" finished-at="2021-01-31T21:00:37 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginApihomeLoan -->
        <test-method signature="MobileloginhomeLoan()[pri:0, instance:test.Basics4@7e9131d5]" started-at="2021-01-31T21:00:37 IST" name="MobileloginhomeLoan" finished-at="2021-01-31T21:00:37 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileloginhomeLoan -->
        <test-method signature="WebloginhomeLoan(java.lang.String)[pri:0, instance:test.Basics4@7e9131d5]" started-at="2021-01-31T21:00:37 IST" name="WebloginhomeLoan" finished-at="2021-01-31T21:00:37 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[personalloan.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WebloginhomeLoan -->
      </class> <!-- test.Basics4 -->
      <class name="test.Basics1">
        <test-method signature="Demo()[pri:0, instance:test.Basics1@2cdd0d4b]" started-at="2021-01-31T21:00:37 IST" name="Demo" finished-at="2021-01-31T21:00:37 IST" duration-ms="16" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at test.Basics1.Demo(Basics1.java:21)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:425)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:66)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Demo -->
        <test-method is-config="true" signature="lastexecution()[pri:0, instance:test.Basics1@2cdd0d4b]" started-at="2021-01-31T21:00:37 IST" name="lastexecution" finished-at="2021-01-31T21:00:37 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lastexecution -->
      </class> <!-- test.Basics1 -->
      <class name="test.Basics2">
        <test-method is-config="true" signature="prerequisite()[pri:0, instance:test.Basics2@6c779568]" started-at="2021-01-31T21:00:37 IST" name="prerequisite" finished-at="2021-01-31T21:00:37 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prerequisite -->
        <test-method signature="ploan()[pri:0, instance:test.Basics2@6c779568]" started-at="2021-01-31T21:00:37 IST" name="ploan" finished-at="2021-01-31T21:00:37 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ploan -->
      </class> <!-- test.Basics2 -->
    </test> <!-- personal loan -->
  </suite> <!-- loan Department -->
</testng-results>
